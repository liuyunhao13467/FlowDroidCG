public class SwitchTest extends java.lang.Object
{
    public static java.lang.Class class$SwitchTest$DataType;

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;

        args := @parameter0;

        return;
    }

    public static void A1()
    {
        java.io.PrintStream temp$0;

        temp$0 = java.lang.System.out;

        temp$0.println("inside A");

        return;
    }

    public static void A2()
    {
        java.io.PrintStream temp$0;

        temp$0 = java.lang.System.out;

        temp$0.println("inside A2");

        return;
    }

    public static void A3()
    {
        java.io.PrintStream temp$0;

        temp$0 = java.lang.System.out;

        temp$0.println("inside A3");

        return;
    }

    public static void C(int)
    {
        int type;
        java.io.PrintStream temp$0, temp$1;

        type := @parameter0;

        goto label5;

     label1:
        nop;

        SwitchTest.A1();

        goto label6;

     label2:
        nop;

        SwitchTest.A2();

        goto label6;

     label3:
        nop;

        SwitchTest.A3();

        goto label6;

     label4:
        nop;

        temp$0 = java.lang.System.out;

        temp$0.println("wrong !!");

        goto label6;

     label5:
        nop;

        nop;

        tableswitch(type)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label6:
        nop;

        temp$1 = java.lang.System.out;

        temp$1.println("end ...");

        return;
    }

    public void <init>()
    {
        SwitchTest this;

        this := @this;

        specialinvoke this.<init>();

        return;
    }

    public static java.lang.Class class$(java.lang.String)
    {
        java.lang.String name, temp$2;
        java.lang.Class temp$0;
        java.lang.ClassNotFoundException e;
        java.lang.NoClassDefFoundError temp$1;

        name := @parameter0;

     label1:
        nop;

        temp$0 = java.lang.Class.forName(name);

     label2:
        nop;

        return temp$0;

     label3:
        nop;

        e := @caughtexception;

        temp$1 = new java.lang.NoClassDefFoundError;

        temp$2 = e.getMessage();

        specialinvoke temp$1.<init>(temp$2);

        throw temp$1;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
