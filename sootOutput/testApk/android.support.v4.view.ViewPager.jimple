public class android.support.v4.view.ViewPager extends android.view.ViewGroup
{
    private static final int CLOSE_ENOUGH;
    private static final java.util.Comparator COMPARATOR;
    private static final boolean DEBUG;
    private static final int DEFAULT_GUTTER_SIZE;
    private static final int DEFAULT_OFFSCREEN_PAGES;
    private static final int INVALID_POINTER;
    private static final int[] LAYOUT_ATTRS;
    private static final int MAX_SETTLE_DURATION;
    private static final int MIN_DISTANCE_FOR_FLING;
    public static final int SCROLL_STATE_DRAGGING;
    public static final int SCROLL_STATE_IDLE;
    public static final int SCROLL_STATE_SETTLING;
    private static final java.lang.String TAG;
    private static final boolean USE_CACHE;
    private static final android.view.animation.Interpolator sInterpolator;
    private int mActivePointerId;
    private android.support.v4.view.PagerAdapter mAdapter;
    private android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener;
    private int mBottomPageBounds;
    private boolean mCalledSuper;
    private int mChildHeightMeasureSpec;
    private int mChildWidthMeasureSpec;
    private int mCloseEnough;
    private int mCurItem;
    private int mDecorChildCount;
    private int mDefaultGutterSize;
    private long mFakeDragBeginTime;
    private boolean mFakeDragging;
    private boolean mFirstLayout;
    private float mFirstOffset;
    private int mFlingDistance;
    private int mGutterSize;
    private boolean mIgnoreGutter;
    private boolean mInLayout;
    private float mInitialMotionX;
    private android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener;
    private boolean mIsBeingDragged;
    private boolean mIsUnableToDrag;
    private final java.util.ArrayList mItems;
    private float mLastMotionX;
    private float mLastMotionY;
    private float mLastOffset;
    private android.support.v4.widget.EdgeEffectCompat mLeftEdge;
    private android.graphics.drawable.Drawable mMarginDrawable;
    private int mMaximumVelocity;
    private int mMinimumVelocity;
    private boolean mNeedCalculatePageOffsets;
    private android.support.v4.view.ViewPager$PagerObserver mObserver;
    private int mOffscreenPageLimit;
    private android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener;
    private int mPageMargin;
    private boolean mPopulatePending;
    private android.os.Parcelable mRestoredAdapterState;
    private java.lang.ClassLoader mRestoredClassLoader;
    private int mRestoredCurItem;
    private android.support.v4.widget.EdgeEffectCompat mRightEdge;
    private int mScrollState;
    private android.widget.Scroller mScroller;
    private boolean mScrollingCacheEnabled;
    private final android.support.v4.view.ViewPager$ItemInfo mTempItem;
    private final android.graphics.Rect mTempRect;
    private int mTopPageBounds;
    private int mTouchSlop;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        int[] $r0;
        android.support.v4.view.ViewPager$1 $r1;
        android.support.v4.view.ViewPager$2 $r2;

        <android.support.v4.view.ViewPager: java.lang.String TAG> = "ViewPager";

        <android.support.v4.view.ViewPager: int SCROLL_STATE_SETTLING> = 2;

        <android.support.v4.view.ViewPager: int SCROLL_STATE_IDLE> = 0;

        <android.support.v4.view.ViewPager: int SCROLL_STATE_DRAGGING> = 1;

        <android.support.v4.view.ViewPager: int MIN_DISTANCE_FOR_FLING> = 25;

        <android.support.v4.view.ViewPager: int MAX_SETTLE_DURATION> = 600;

        <android.support.v4.view.ViewPager: int INVALID_POINTER> = -1;

        <android.support.v4.view.ViewPager: int DEFAULT_OFFSCREEN_PAGES> = 1;

        <android.support.v4.view.ViewPager: int DEFAULT_GUTTER_SIZE> = 16;

        <android.support.v4.view.ViewPager: boolean DEBUG> = 0;

        <android.support.v4.view.ViewPager: int CLOSE_ENOUGH> = 2;

        $r0 = newarray (int)[1];

        $r0[0] = 16842931;

        <android.support.v4.view.ViewPager: int[] LAYOUT_ATTRS> = $r0;

        $r1 = new android.support.v4.view.ViewPager$1;

        specialinvoke $r1.<android.support.v4.view.ViewPager$1: void <init>()>();

        <android.support.v4.view.ViewPager: java.util.Comparator COMPARATOR> = $r1;

        $r2 = new android.support.v4.view.ViewPager$2;

        specialinvoke $r2.<android.support.v4.view.ViewPager$2: void <init>()>();

        <android.support.v4.view.ViewPager: android.view.animation.Interpolator sInterpolator> = $r2;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.support.v4.view.ViewPager $r0;
        android.content.Context $r1;
        java.util.ArrayList $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;
        android.graphics.Rect $r4;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems> = $r2;

        $r3 = new android.support.v4.view.ViewPager$ItemInfo;

        specialinvoke $r3.<android.support.v4.view.ViewPager$ItemInfo: void <init>()>();

        $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo mTempItem> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        $r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect> = $r4;

        $r0.<android.support.v4.view.ViewPager: int mRestoredCurItem> = -1;

        $r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        $r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        $r0.<android.support.v4.view.ViewPager: float mFirstOffset> = -3.4028235E38F;

        $r0.<android.support.v4.view.ViewPager: float mLastOffset> = 3.4028235E38F;

        $r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit> = 1;

        $r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        $r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 1;

        $r0.<android.support.v4.view.ViewPager: boolean mNeedCalculatePageOffsets> = 0;

        $r0.<android.support.v4.view.ViewPager: int mScrollState> = 0;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void initViewPager()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.view.ViewPager $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        java.util.ArrayList $r3;
        android.support.v4.view.ViewPager$ItemInfo $r4;
        android.graphics.Rect $r5;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems> = $r3;

        $r4 = new android.support.v4.view.ViewPager$ItemInfo;

        specialinvoke $r4.<android.support.v4.view.ViewPager$ItemInfo: void <init>()>();

        $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo mTempItem> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        $r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect> = $r5;

        $r0.<android.support.v4.view.ViewPager: int mRestoredCurItem> = -1;

        $r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        $r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        $r0.<android.support.v4.view.ViewPager: float mFirstOffset> = -3.4028235E38F;

        $r0.<android.support.v4.view.ViewPager: float mLastOffset> = 3.4028235E38F;

        $r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit> = 1;

        $r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        $r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 1;

        $r0.<android.support.v4.view.ViewPager: boolean mNeedCalculatePageOffsets> = 0;

        $r0.<android.support.v4.view.ViewPager: int mScrollState> = 0;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void initViewPager()>();

        return;
    }

    static android.support.v4.view.PagerAdapter access$100(android.support.v4.view.ViewPager)
    {
        android.support.v4.view.ViewPager $r0;
        android.support.v4.view.PagerAdapter r1;

        $r0 := @parameter0: android.support.v4.view.ViewPager;

        r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        return r1;
    }

    static int access$200(android.support.v4.view.ViewPager)
    {
        android.support.v4.view.ViewPager $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.view.ViewPager;

        i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        return i0;
    }

    static int[] access$300()
    {
        int[] r0;

        r0 = <android.support.v4.view.ViewPager: int[] LAYOUT_ATTRS>;

        return r0;
    }

    private void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo, int, android.support.v4.view.ViewPager$ItemInfo)
    {
        android.support.v4.view.ViewPager $r0;
        android.support.v4.view.ViewPager$ItemInfo $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.support.v4.view.PagerAdapter $r3;
        float $f0, $f1, $f2, $f3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.support.v4.view.ViewPager$ItemInfo;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.support.v4.view.ViewPager$ItemInfo;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        if $i3 <= 0 goto label04;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f0 = (float) $i1;

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

     label01:
        if $r2 == null goto label12;

        $i1 = $r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i3 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 >= $i3 goto label07;

        $i3 = 0;

        $f1 = $r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f2 = $r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f1 = $f1 + $f2;

        $f1 = $f1 + $f0;

        $i1 = $i1 + 1;

     label02:
        $i4 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 > $i4 goto label12;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i3 >= $i4 goto label12;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r2 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

     label03:
        $i4 = $r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 <= $i4 goto label05;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i4 = $i4 + -1;

        if $i3 >= $i4 goto label05;

        $i3 = $i3 + 1;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r2 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        goto label03;

     label04:
        $f0 = 0.0F;

        goto label01;

     label05:
        $i4 = $r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 >= $i4 goto label06;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $f2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i1);

        $f2 = $f2 + $f0;

        $f1 = $f1 + $f2;

        $i1 = $i1 + 1;

        goto label05;

     label06:
        $r2.<android.support.v4.view.ViewPager$ItemInfo: float offset> = $f1;

        $f2 = $r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f2 = $f2 + $f0;

        $f1 = $f1 + $f2;

        $i1 = $i1 + 1;

        goto label02;

     label07:
        $i3 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 <= $i3 goto label12;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i3 = $i3 + -1;

        $f1 = $r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $i1 = $i1 + -1;

     label08:
        $i4 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 < $i4 goto label12;

        if $i3 < 0 goto label12;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r2 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

     label09:
        $i4 = $r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 >= $i4 goto label10;

        if $i3 <= 0 goto label10;

        $i3 = $i3 + -1;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r2 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        goto label09;

     label10:
        $i4 = $r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 <= $i4 goto label11;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $f2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i1);

        $f2 = $f2 + $f0;

        $f1 = $f1 - $f2;

        $i1 = $i1 + -1;

        goto label10;

     label11:
        $f2 = $r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f2 = $f2 + $f0;

        $f1 = $f1 - $f2;

        $r2.<android.support.v4.view.ViewPager$ItemInfo: float offset> = $f1;

        $i1 = $i1 + -1;

        goto label08;

     label12:
        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $f1 = $r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $i1 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i1 = $i1 + -1;

        $i4 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i4 != 0 goto label17;

        $f2 = $r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

     label13:
        $r0.<android.support.v4.view.ViewPager: float mFirstOffset> = $f2;

        $i4 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i5 = $i2 + -1;

        if $i4 != $i5 goto label18;

        $f2 = $r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f3 = $r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f2 = $f2 + $f3;

        $f2 = $f2 - 1.0F;

     label14:
        $r0.<android.support.v4.view.ViewPager: float mLastOffset> = $f2;

        $i4 = $i0 + -1;

     label15:
        if $i4 < 0 goto label21;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r2 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

     label16:
        $i5 = $r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 <= $i5 goto label19;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $f2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i1);

        $f2 = $f2 + $f0;

        $f1 = $f1 - $f2;

        $i1 = $i1 + -1;

        goto label16;

     label17:
        $f2 = -3.4028235E38F;

        goto label13;

     label18:
        $f2 = 3.4028235E38F;

        goto label14;

     label19:
        $f2 = $r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f2 = $f2 + $f0;

        $f1 = $f1 - $f2;

        $r2.<android.support.v4.view.ViewPager$ItemInfo: float offset> = $f1;

        $i5 = $r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i5 != 0 goto label20;

        $r0.<android.support.v4.view.ViewPager: float mFirstOffset> = $f1;

     label20:
        $i4 = $i4 + -1;

        $i1 = $i1 + -1;

        goto label15;

     label21:
        $f1 = $r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f2 = $r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f1 = $f1 + $f2;

        $f1 = $f1 + $f0;

        $i1 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i1 = $i1 + 1;

        $i0 = $i0 + 1;

     label22:
        if $i0 >= $i3 goto label26;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r1 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

     label23:
        $i4 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 >= $i4 goto label24;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $f2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i1);

        $f2 = $f2 + $f0;

        $f1 = $f1 + $f2;

        $i1 = $i1 + 1;

        goto label23;

     label24:
        $i4 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i5 = $i2 + -1;

        if $i4 != $i5 goto label25;

        $f2 = $r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f2 = $f2 + $f1;

        $f2 = $f2 - 1.0F;

        $r0.<android.support.v4.view.ViewPager: float mLastOffset> = $f2;

     label25:
        $r1.<android.support.v4.view.ViewPager$ItemInfo: float offset> = $f1;

        $f2 = $r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f2 = $f2 + $f0;

        $f1 = $f1 + $f2;

        $i0 = $i0 + 1;

        $i1 = $i1 + 1;

        goto label22;

     label26:
        $r0.<android.support.v4.view.ViewPager: boolean mNeedCalculatePageOffsets> = 0;

        return;
    }

    private void completeScroll()
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        android.widget.Scroller $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        android.support.v4.view.ViewPager$ItemInfo $r4;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mScrollState>;

        if $i0 != 2 goto label7;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label4;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        $r1 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r1.<android.widget.Scroller: void abortAnimation()>();

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        $r1 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i2 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r1 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i3 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        if $i0 != $i2 goto label2;

        if $i1 == $i3 goto label3;

     label2:
        virtualinvoke $r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>($i2, $i3);

     label3:
        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(0);

     label4:
        $r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        $i0 = 0;

     label5:
        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label8;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (android.support.v4.view.ViewPager$ItemInfo) $r3;

        $z1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling>;

        if $z1 == 0 goto label6;

        $z0 = 1;

        $r4.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling> = 0;

     label6:
        $i0 = $i0 + 1;

        goto label5;

     label7:
        $z0 = 0;

        goto label1;

     label8:
        if $z0 == 0 goto label9;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate()>();

     label9:
        return;
    }

    private int determineTargetPage(int, float, int, int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        java.util.ArrayList $r1, $r4;
        java.lang.Object $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3, $r5;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $i3 = $r0.<android.support.v4.view.ViewPager: int mFlingDistance>;

        if $i2 <= $i3 goto label3;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i3 = $r0.<android.support.v4.view.ViewPager: int mMinimumVelocity>;

        if $i2 <= $i3 goto label3;

        if $i1 <= 0 goto label2;

     label1:
        $r1 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label4;

        $r1 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (android.support.v4.view.ViewPager$ItemInfo) $r2;

        $r1 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i1 = $i1 + -1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (android.support.v4.view.ViewPager$ItemInfo) $r2;

        $i1 = $r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i2 = $r5.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $f1 = (float) $i0;

        $f0 = $f1 + $f0;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        goto label1;

     label4:
        return $i0;
    }

    private void endDrag()
    {
        android.support.v4.view.ViewPager $r0;
        android.view.VelocityTracker $r1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 0;

        $r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 0;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1.<android.view.VelocityTracker: void recycle()>();

        $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    private android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect, android.view.View)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        int $i0, $i1;
        android.view.ViewParent $r3;
        boolean $z0;
        android.view.ViewGroup $r4;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r2 := @parameter0: android.graphics.Rect;

        $r1 := @parameter1: android.view.View;

        if $r2 != null goto label1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

     label1:
        if $r1 != null goto label2;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return $r2;

     label2:
        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $r2.<android.graphics.Rect: int left> = $i0;

        $i0 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $r2.<android.graphics.Rect: int right> = $i0;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $r2.<android.graphics.Rect: int top> = $i0;

        $i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $r2.<android.graphics.Rect: int bottom> = $i0;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

     label3:
        $z0 = $r3 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        if $r3 == $r0 goto label4;

        $r4 = (android.view.ViewGroup) $r3;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $i1 = virtualinvoke $r4.<android.view.ViewGroup: int getLeft()>();

        $i0 = $i0 + $i1;

        $r2.<android.graphics.Rect: int left> = $i0;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $i1 = virtualinvoke $r4.<android.view.ViewGroup: int getRight()>();

        $i0 = $i0 + $i1;

        $r2.<android.graphics.Rect: int right> = $i0;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $i1 = virtualinvoke $r4.<android.view.ViewGroup: int getTop()>();

        $i0 = $i0 + $i1;

        $r2.<android.graphics.Rect: int top> = $i0;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = virtualinvoke $r4.<android.view.ViewGroup: int getBottom()>();

        $i0 = $i0 + $i1;

        $r2.<android.graphics.Rect: int bottom> = $i0;

        $r3 = virtualinvoke $r4.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        goto label3;

     label4:
        return $r2;
    }

    private android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()
    {
        android.support.v4.view.ViewPager $r0;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.support.v4.view.ViewPager$ItemInfo $r1, $r4;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        android.support.v4.view.PagerAdapter $r5;
        byte $b4;

        $r0 := @this: android.support.v4.view.ViewPager;

        $f2 = 0.0F;

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        if $i0 <= 0 goto label7;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $f3 = (float) $i1;

        $f0 = (float) $i0;

        $f3 = $f3 / $f0;

     label1:
        if $i0 <= 0 goto label2;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f2 = (float) $i1;

        $f0 = (float) $i0;

        $f2 = $f2 / $f0;

     label2:
        $i1 = -1;

        $f0 = 0.0F;

        $f1 = 0.0F;

        $z0 = 1;

        $r1 = null;

        $i0 = 0;

     label3:
        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i2 goto label9;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (android.support.v4.view.ViewPager$ItemInfo) $r3;

        if $z0 != 0 goto label4;

        $i2 = $r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i3 = $i1 + 1;

        if $i2 == $i3 goto label4;

        $r4 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo mTempItem>;

        $f0 = $f0 + $f1;

        $f0 = $f0 + $f2;

        $r4.<android.support.v4.view.ViewPager$ItemInfo: float offset> = $f0;

        $i1 = $i1 + 1;

        $r4.<android.support.v4.view.ViewPager$ItemInfo: int position> = $i1;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $f0 = virtualinvoke $r5.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i1);

        $r4.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor> = $f0;

        $i0 = $i0 + -1;

     label4:
        $f0 = $r4.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f1 = $f1 + $f0;

        $f1 = $f1 + $f2;

        if $z0 != 0 goto label5;

        $b4 = $f3 cmpl $f0;

        if $b4 < 0 goto label9;

     label5:
        $b4 = $f3 cmpg $f1;

        if $b4 < 0 goto label6;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = $i1 + -1;

        if $i0 != $i1 goto label8;

     label6:
        return $r4;

     label7:
        $f3 = 0.0F;

        goto label1;

     label8:
        $z0 = 0;

        $i1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $f1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $r1 = $r4;

        $i0 = $i0 + 1;

        goto label3;

     label9:
        return $r1;
    }

    private boolean isGutterDrag(float, float)
    {
        android.support.v4.view.ViewPager $r0;
        float $f0, $f1, $f2;
        int $i0, $i1;
        byte $b2;

        $r0 := @this: android.support.v4.view.ViewPager;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mGutterSize>;

        $f2 = (float) $i0;

        $b2 = $f0 cmpg $f2;

        if $b2 >= 0 goto label1;

        $b2 = $f1 cmpl 0.0F;

        if $b2 > 0 goto label2;

     label1:
        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i0 = $r0.<android.support.v4.view.ViewPager: int mGutterSize>;

        $i0 = $i1 - $i0;

        $f2 = (float) $i0;

        $b2 = $f0 cmpl $f2;

        if $b2 <= 0 goto label3;

        $b2 = $f1 cmpg 0.0F;

        if $b2 >= 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        byte $b3;
        float $f0;
        android.view.VelocityTracker $r2;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i0);

        $i2 = $r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        if $i1 != $i2 goto label3;

        if $i0 != 0 goto label2;

        $b3 = 1;

     label1:
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $b3);

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f0;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $b3);

        $r0.<android.support.v4.view.ViewPager: int mActivePointerId> = $i0;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label3;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

        return;

     label2:
        $b3 = 0;

        goto label1;

     label3:
        return;
    }

    private boolean pageScrolled(int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label1;

        $r0.<android.support.v4.view.ViewPager: boolean mCalledSuper> = 0;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>(0, 0.0F, 0);

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mCalledSuper>;

        if $z0 != 0 goto label3;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onPageScrolled did not call superclass implementation");

        throw $r2;

     label1:
        $r3 = specialinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>();

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i1 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $i2 = $i3 + $i1;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f0 = (float) $i1;

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

        $i1 = $r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $f1 = (float) $i0;

        $f2 = (float) $i3;

        $f1 = $f1 / $f2;

        $f2 = $r3.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f1 = $f1 - $f2;

        $f2 = $r3.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f0 = $f2 + $f0;

        $f0 = $f1 / $f0;

        $f1 = (float) $i2;

        $f1 = $f1 * $f0;

        $i0 = (int) $f1;

        $r0.<android.support.v4.view.ViewPager: boolean mCalledSuper> = 0;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>($i1, $f0, $i0);

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mCalledSuper>;

        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onPageScrolled did not call superclass implementation");

        throw $r2;

     label2:
        return 1;

     label3:
        return 0;
    }

    private boolean performDrag(float)
    {
        android.support.v4.view.ViewPager $r0;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.util.ArrayList $r1, $r4;
        java.lang.Object $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3, $r5;
        android.support.v4.view.PagerAdapter $r6;
        byte $b3;
        android.support.v4.widget.EdgeEffectCompat $r7;

        $r0 := @this: android.support.v4.view.ViewPager;

        $f0 := @parameter0: float;

        $z0 = 0;

        $f1 = $r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $f1 = $f1 - $f0;

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f0;

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $f0 = (float) $i0;

        $f0 = $f0 + $f1;

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $f1 = (float) $i0;

        $f2 = $r0.<android.support.v4.view.ViewPager: float mFirstOffset>;

        $f1 = $f1 * $f2;

        $f2 = (float) $i0;

        $f3 = $r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        $f2 = $f2 * $f3;

        $z1 = 1;

        $z2 = 1;

        $r1 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (android.support.v4.view.ViewPager$ItemInfo) $r2;

        $r1 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i1 = $i1 + -1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (android.support.v4.view.ViewPager$ItemInfo) $r2;

        $i1 = $r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 == 0 goto label1;

        $z1 = 0;

        $f1 = $r3.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f3 = (float) $i0;

        $f1 = $f1 * $f3;

     label1:
        $i1 = $r5.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r6 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i2 = virtualinvoke $r6.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i2 = $i2 + -1;

        if $i1 == $i2 goto label2;

        $z2 = 0;

        $f2 = $r5.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f3 = (float) $i0;

        $f2 = $f2 * $f3;

     label2:
        $b3 = $f0 cmpg $f1;

        if $b3 >= 0 goto label5;

        if $z1 == 0 goto label3;

        $f0 = $f1 - $f0;

        $r7 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f2 = (float) $i0;

        $f0 = $f0 / $f2;

        $z0 = virtualinvoke $r7.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)>($f0);

     label3:
        $f0 = $f1;

     label4:
        $f1 = $r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $i0 = (int) $f0;

        $f2 = (float) $i0;

        $f2 = $f0 - $f2;

        $f1 = $f1 + $f2;

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f1;

        $i0 = (int) $f0;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>($i0, $i1);

        $i0 = (int) $f0;

        specialinvoke $r0.<android.support.v4.view.ViewPager: boolean pageScrolled(int)>($i0);

        return $z0;

     label5:
        $b3 = $f0 cmpl $f2;

        if $b3 <= 0 goto label4;

        if $z2 == 0 goto label6;

        $f0 = $f0 - $f2;

        $r7 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $z0 = virtualinvoke $r7.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)>($f0);

     label6:
        $f0 = $f2;

        goto label4;
    }

    private void recomputeScrollPosition(int, int, int, int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        java.util.ArrayList $r1;
        boolean $z0;
        android.widget.Scroller $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        if $i1 <= 0 goto label1;

        $r1 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i2 = $i0 + $i2;

        $i1 = $i1 + $i3;

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $f0 = (float) $i3;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f1 = (float) $i2;

        $f0 = $f1 * $f0;

        $i1 = (int) $f0;

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>($i1, $i2);

        $r2 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r2.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label4;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i2 = virtualinvoke $r2.<android.widget.Scroller: int getDuration()>();

        $r2 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i3 = virtualinvoke $r2.<android.widget.Scroller: int timePassed()>();

        $i2 = $i2 - $i3;

        $i3 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $r3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>($i3);

        $r2 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $f0 = $r3.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $i0 = (int) $f0;

        virtualinvoke $r2.<android.widget.Scroller: void startScroll(int,int,int,int,int)>($i1, 0, $i0, 0, $i2);

        return;

     label1:
        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $r3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>($i1);

        if $r3 == null goto label3;

        $f0 = $r3.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f1 = $r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

     label2:
        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        if $i0 == $i1 goto label4;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void completeScroll()>();

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>($i0, $i1);

        return;

     label3:
        $f0 = 0.0F;

        goto label2;

     label4:
        return;
    }

    private void removeNonDecorViews()
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.view.ViewPager$LayoutParams $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.view.ViewPager$LayoutParams) $r2;

        $z0 = $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void removeViewAt(int)>($i0);

        $i0 = $i0 + -1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void setScrollState(int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mScrollState>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r0.<android.support.v4.view.ViewPager: int mScrollState> = $i0;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if $r1 == null goto label2;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>($i0);

     label2:
        return;
    }

    private void setScrollingCacheEnabled(boolean)
    {
        android.support.v4.view.ViewPager $r0;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.support.v4.view.ViewPager: boolean mScrollingCacheEnabled>;

        if $z1 == $z0 goto label1;

        $r0.<android.support.v4.view.ViewPager: boolean mScrollingCacheEnabled> = $z0;

     label1:
        return;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        android.support.v4.view.ViewPager $r0;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: java.util.ArrayList;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getDescendantFocusability()>();

        if $i3 == 393216 goto label3;

        $i4 = 0;

     label1:
        $i5 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if $i4 >= $i5 goto label3;

        $r2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i5 != 0 goto label2;

        $r3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>($r2);

        if $r3 == null goto label2;

        $i5 = $r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i6 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i5 != $i6 goto label2;

        virtualinvoke $r2.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>($r1, $i0, $i1);

     label2:
        $i4 = $i4 + 1;

        goto label1;

     label3:
        if $i3 != 262144 goto label4;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i2 != $i0 goto label7;

     label4:
        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean isFocusable()>();

        if $z0 != 0 goto label5;

        return;

     label5:
        $i0 = $i1 & 1;

        if $i0 != 1 goto label6;

        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean isInTouchMode()>();

        if $z0 == 0 goto label6;

        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean isFocusableInTouchMode()>();

        if $z0 == 0 goto label7;

     label6:
        if $r1 == null goto label7;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

     label7:
        return;
    }

    android.support.v4.view.ViewPager$ItemInfo addNewItem(int, int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1;
        android.support.v4.view.ViewPager$ItemInfo $r1;
        android.support.v4.view.PagerAdapter $r2;
        java.lang.Object $r3;
        float $f0;
        java.util.ArrayList $r4;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new android.support.v4.view.ViewPager$ItemInfo;

        specialinvoke $r1.<android.support.v4.view.ViewPager$ItemInfo: void <init>()>();

        $r1.<android.support.v4.view.ViewPager$ItemInfo: int position> = $i0;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>($r0, $i0);

        $r1.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object> = $r3;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $f0 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i0);

        $r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor> = $f0;

        if $i1 < 0 goto label1;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 < $i0 goto label2;

     label1:
        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return $r1;

     label2:
        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>($i1, $r1);

        return $r1;
    }

    public void addTouchables(java.util.ArrayList)
    {
        android.support.v4.view.ViewPager $r0;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2;
        android.view.View $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: java.util.ArrayList;

        $i1 = 0;

     label1:
        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i1);

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label2;

        $r3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>($r2);

        if $r3 == null goto label2;

        $i2 = $r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i2 != $i0 goto label2;

        virtualinvoke $r2.<android.view.View: void addTouchables(java.util.ArrayList)>($r1);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0, $z1;
        android.support.v4.view.ViewPager$LayoutParams $r3;
        java.lang.IllegalStateException $r4;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

     label1:
        $r3 = (android.support.v4.view.ViewPager$LayoutParams) $r2;

        $z0 = $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        $z1 = $r1 instanceof android.support.v4.view.ViewPager$Decor;

        $z0 = $z0 | $z1;

        $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor> = $z0;

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mInLayout>;

        if $z0 == 0 goto label3;

        if $r3 == null goto label2;

        $z0 = $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot add pager decor view during layout");

        throw $r4;

     label2:
        $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean needsMeasure> = 1;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;

     label3:
        specialinvoke $r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;
    }

    public boolean arrowScroll(int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2;
        android.view.View $r1, $r2;
        boolean $z0;
        android.view.FocusFinder $r3;
        android.graphics.Rect $r4;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View findFocus()>();

        $r2 = $r1;

        if $r1 != $r0 goto label01;

        $r2 = null;

     label01:
        $z0 = 0;

        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r1 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, $r2, $i0);

        if $r1 == null goto label06;

        if $r1 == $r2 goto label06;

        if $i0 != 17 goto label04;

        $r4 = $r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect>;

        $r4 = specialinvoke $r0.<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r4, $r1);

        $i1 = $r4.<android.graphics.Rect: int left>;

        $r4 = $r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect>;

        $r4 = specialinvoke $r0.<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r4, $r2);

        $i2 = $r4.<android.graphics.Rect: int left>;

        if $r2 == null goto label03;

        if $i1 < $i2 goto label03;

        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean pageLeft()>();

     label02:
        if $z0 == 0 goto label10;

        $i0 = staticinvoke <android.view.SoundEffectConstants: int getContantForFocusDirection(int)>($i0);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void playSoundEffect(int)>($i0);

        return $z0;

     label03:
        $z0 = virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

        goto label02;

     label04:
        if $i0 != 66 goto label02;

        $r4 = $r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect>;

        $r4 = specialinvoke $r0.<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r4, $r1);

        $i1 = $r4.<android.graphics.Rect: int left>;

        $r4 = $r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect>;

        $r4 = specialinvoke $r0.<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r4, $r2);

        $i2 = $r4.<android.graphics.Rect: int left>;

        if $r2 == null goto label05;

        if $i1 > $i2 goto label05;

        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean pageRight()>();

        goto label02;

     label05:
        $z0 = virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

        goto label02;

     label06:
        if $i0 == 17 goto label07;

        if $i0 != 1 goto label08;

     label07:
        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean pageLeft()>();

        goto label02;

     label08:
        if $i0 == 66 goto label09;

        if $i0 != 2 goto label02;

     label09:
        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean pageRight()>();

        goto label02;

     label10:
        return $z0;
    }

    public boolean beginFakeDrag()
    {
        android.support.v4.view.ViewPager $r0;
        boolean $z0;
        android.view.VelocityTracker $r1;
        long $l0;
        android.view.MotionEvent $r2;

        $r0 := @this: android.support.v4.view.ViewPager;

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r0.<android.support.v4.view.ViewPager: boolean mFakeDragging> = 1;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(1);

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = 0.0F;

        $r0.<android.support.v4.view.ViewPager: float mInitialMotionX> = 0.0F;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label3;

        $r1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = $r1;

     label2:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l0, $l0, 0, 0.0F, 0.0F, 0);

        $r1 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r2);

        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

        $r0.<android.support.v4.view.ViewPager: long mFakeDragBeginTime> = $l0;

        return 1;

     label3:
        $r1 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1.<android.view.VelocityTracker: void clear()>();

        goto label2;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.View $r1, $r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.ViewGroup $r2;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z1 = $r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        $r2 = (android.view.ViewGroup) $r1;

        $i5 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i6 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i7 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

        $i7 = $i7 + -1;

     label1:
        if $i7 < 0 goto label3;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i7);

        $i3 = $i1 + $i5;

        $i4 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        if $i3 < $i4 goto label2;

        $i3 = $i1 + $i5;

        $i4 = virtualinvoke $r3.<android.view.View: int getRight()>();

        if $i3 >= $i4 goto label2;

        $i3 = $i2 + $i6;

        $i4 = virtualinvoke $r3.<android.view.View: int getTop()>();

        if $i3 < $i4 goto label2;

        $i3 = $i2 + $i6;

        $i4 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        if $i3 >= $i4 goto label2;

        $i3 = $i1 + $i5;

        $i4 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        $i3 = $i3 - $i4;

        $i4 = $i2 + $i6;

        $i8 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i4 = $i4 - $i8;

        $z1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)>($r3, 1, $i0, $i3, $i4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $i7 = $i7 + -1;

        goto label1;

     label3:
        if $z0 == 0 goto label4;

        $i0 = neg $i0;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r1, $i0);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.support.v4.view.ViewPager$LayoutParams;

        if $z0 == 0 goto label1;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void computeScroll()
    {
        android.support.v4.view.ViewPager $r0;
        android.widget.Scroller $r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label3;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        $r1 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i2 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r1 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i3 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        if $i0 != $i2 goto label1;

        if $i1 == $i3 goto label2;

     label1:
        virtualinvoke $r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>($i2, $i3);

        $z0 = specialinvoke $r0.<android.support.v4.view.ViewPager: boolean pageScrolled(int)>($i2);

        if $z0 != 0 goto label2;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r1.<android.widget.Scroller: void abortAnimation()>();

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>(0, $i3);

     label2:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

        return;

     label3:
        specialinvoke $r0.<android.support.v4.view.ViewPager: void completeScroll()>();

        return;
    }

    void dataSetChanged()
    {
        android.support.v4.view.ViewPager $r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.view.PagerAdapter $r3;
        boolean $z0, $z1;
        android.support.v4.view.ViewPager$ItemInfo $r4;
        java.util.Comparator $r5;
        android.view.View $r6;
        android.view.ViewGroup$LayoutParams $r7;
        android.support.v4.view.ViewPager$LayoutParams $r8;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = $r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        $i1 = $i1 * 2;

        $i1 = $i1 + 1;

        if $i0 >= $i1 goto label04;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i1 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i0 >= $i1 goto label04;

        $z0 = 1;

     label01:
        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $z1 = 0;

        $i0 = 0;

     label02:
        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i2 goto label09;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (android.support.v4.view.ViewPager$ItemInfo) $r1;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        $i2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)>($r1);

        if $i2 != -1 goto label05;

     label03:
        $i0 = $i0 + 1;

        goto label02;

     label04:
        $z0 = 0;

        goto label01;

     label05:
        if $i2 != -2 goto label07;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $i0 = $i0 + -1;

        if $z1 != 0 goto label06;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r3.<android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)>($r0);

        $z1 = 1;

     label06:
        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i2 = $r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r3.<android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>($r0, $i2, $r1);

        $z0 = 1;

        $i2 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i3 = $r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i2 != $i3 goto label03;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i2 = $i2 + -1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $z0 = 1;

        goto label03;

     label07:
        $i3 = $r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i3 == $i2 goto label03;

        $i3 = $r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i4 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i3 != $i4 goto label08;

        $i1 = $i2;

     label08:
        $r4.<android.support.v4.view.ViewPager$ItemInfo: int position> = $i2;

        $z0 = 1;

        goto label03;

     label09:
        if $z1 == 0 goto label10;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r3.<android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)>($r0);

     label10:
        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = <android.support.v4.view.ViewPager: java.util.Comparator COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r5);

        if $z0 == 0 goto label14;

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        $i2 = 0;

     label11:
        if $i2 >= $i0 goto label13;

        $r6 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i2);

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (android.support.v4.view.ViewPager$LayoutParams) $r7;

        $z0 = $r8.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 != 0 goto label12;

        $r8.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor> = 0.0F;

     label12:
        $i2 = $i2 + 1;

        goto label11;

     label13:
        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($i1, 0, 1);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void requestLayout()>();

     label14:
        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.accessibility.AccessibilityEvent $r1;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i2);

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label2;

        $r3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>($r2);

        if $r3 == null goto label2;

        $i3 = $r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i3 != $i0 goto label2;

        $z0 = virtualinvoke $r2.<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    float distanceInfluenceForSnapDuration(float)
    {
        android.support.v4.view.ViewPager $r0;
        double $d0;
        float $f0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $f0 := @parameter0: float;

        $f0 = $f0 - 0.5F;

        $d0 = (double) $f0;

        $d0 = $d0 * 0.4712389167638204;

        $f0 = (float) $d0;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.view.ViewPager $r0;
        android.graphics.Canvas $r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.view.PagerAdapter $r2;
        android.support.v4.widget.EdgeEffectCompat $r3;
        float $f0, $f1, $f2;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>($r1);

        $z0 = 0;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>($r0);

        if $i0 == 0 goto label1;

        if $i0 != 1 goto label4;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r2 == null goto label4;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i0 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i0 <= 1 goto label4;

     label1:
        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label2;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getHeight()>();

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $i3 = neg $i1;

        $i4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i3 = $i3 + $i4;

        $f0 = (float) $i3;

        $f1 = $r0.<android.support.v4.view.ViewPager: float mFirstOffset>;

        $f2 = (float) $i2;

        $f1 = $f1 * $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i1, $i2);

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $z0 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        $z0 = 0 | $z0;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

     label2:
        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label3;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getHeight()>();

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingBottom()>();

        $i2 = $i2 - $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i3 = neg $i3;

        $f0 = (float) $i3;

        $f1 = $r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        $f1 = $f1 + 1.0F;

        $f1 = neg $f1;

        $f2 = (float) $i1;

        $f1 = $f1 * $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i2, $i1);

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        $z0 = $z0 | $z1;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

     label3:
        if $z0 == 0 goto label5;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

        return;

     label4:
        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: void finish()>();

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: void finish()>();

        goto label3;

     label5:
        return;
    }

    protected void drawableStateChanged()
    {
        android.support.v4.view.ViewPager $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        int[] $r2;

        $r0 := @this: android.support.v4.view.ViewPager;

        specialinvoke $r0.<android.view.ViewGroup: void drawableStateChanged()>();

        $r1 = $r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int[] getDrawableState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label1:
        return;
    }

    public void endFakeDrag()
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;
        android.view.VelocityTracker $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mFakeDragging>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No fake drag in progress. Call beginFakeDrag first.");

        throw $r2;

     label1:
        $r1 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mMaximumVelocity>;

        $f0 = (float) $i1;

        virtualinvoke $r1.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f0);

        $i1 = $r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r1, $i1);

        $i1 = (int) $f0;

        $r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 1;

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $r3 = specialinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>();

        $i0 = $r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

        $f1 = $r3.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f0 = $f0 - $f1;

        $f1 = $r3.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f0 = $f0 / $f1;

        $f1 = $r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $f2 = $r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $f1 = $f1 - $f2;

        $i2 = (int) $f1;

        $i0 = specialinvoke $r0.<android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>($i0, $f0, $i1, $i2);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>($i0, 1, 1, $i1);

        specialinvoke $r0.<android.support.v4.view.ViewPager: void endDrag()>();

        $r0.<android.support.v4.view.ViewPager: boolean mFakeDragging> = 0;

        return;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.KeyEvent $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label6;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch($i0)
        {
            case 21: goto label2;
            case 22: goto label3;
            case 61: goto label4;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean arrowScroll(int)>(17);

        return $z0;

     label3:
        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean arrowScroll(int)>(66);

        return $z0;

     label4:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label6;

        $z0 = staticinvoke <android.support.v4.view.KeyEventCompat: boolean hasNoModifiers(android.view.KeyEvent)>($r1);

        if $z0 == 0 goto label5;

        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean arrowScroll(int)>(2);

        return $z0;

     label5:
        $z0 = staticinvoke <android.support.v4.view.KeyEventCompat: boolean hasModifiers(android.view.KeyEvent,int)>($r1, 1);

        if $z0 == 0 goto label6;

        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean arrowScroll(int)>(1);

        return $z0;

     label6:
        return 0;
    }

    public void fakeDragBy(float)
    {
        android.support.v4.view.ViewPager $r0;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, $r5;
        java.lang.Object $r3;
        android.support.v4.view.ViewPager$ItemInfo $r4, $r6;
        android.support.v4.view.PagerAdapter $r7;
        byte $b3;
        long $l4, $l5;
        android.view.MotionEvent $r8;
        android.view.VelocityTracker $r9;

        $r0 := @this: android.support.v4.view.ViewPager;

        $f0 := @parameter0: float;

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mFakeDragging>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No fake drag in progress. Call beginFakeDrag first.");

        throw $r1;

     label1:
        $f1 = $r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $f1 = $f1 + $f0;

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f1;

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $f1 = (float) $i0;

        $f0 = $f1 - $f0;

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $f1 = (float) $i0;

        $f2 = $r0.<android.support.v4.view.ViewPager: float mFirstOffset>;

        $f1 = $f1 * $f2;

        $f2 = (float) $i0;

        $f3 = $r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        $f2 = $f2 * $f3;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (android.support.v4.view.ViewPager$ItemInfo) $r3;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i1 = $i1 + -1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r6 = (android.support.v4.view.ViewPager$ItemInfo) $r3;

        $i1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i1 == 0 goto label2;

        $f1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f3 = (float) $i0;

        $f1 = $f1 * $f3;

     label2:
        $i1 = $r6.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r7 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i2 = virtualinvoke $r7.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i2 = $i2 + -1;

        if $i1 == $i2 goto label3;

        $f2 = $r6.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f3 = (float) $i0;

        $f2 = $f2 * $f3;

     label3:
        $b3 = $f0 cmpg $f1;

        if $b3 >= 0 goto label5;

        $f0 = $f1;

     label4:
        $f1 = $r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $i0 = (int) $f0;

        $f2 = (float) $i0;

        $f2 = $f0 - $f2;

        $f1 = $f1 + $f2;

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f1;

        $i0 = (int) $f0;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>($i0, $i1);

        $i0 = (int) $f0;

        specialinvoke $r0.<android.support.v4.view.ViewPager: boolean pageScrolled(int)>($i0);

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = $r0.<android.support.v4.view.ViewPager: long mFakeDragBeginTime>;

        $f0 = $r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $r8 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l5, $l4, 2, $f0, 0.0F, 0);

        $r9 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r9.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r8);

        virtualinvoke $r8.<android.view.MotionEvent: void recycle()>();

        return;

     label5:
        $b3 = $f0 cmpl $f2;

        if $b3 <= 0 goto label4;

        $f0 = $f2;

        goto label4;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v4.view.ViewPager $r0;
        android.support.v4.view.ViewPager$LayoutParams $r1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 = new android.support.v4.view.ViewPager$LayoutParams;

        specialinvoke $r1.<android.support.v4.view.ViewPager$LayoutParams: void <init>()>();

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v4.view.ViewPager $r0;
        android.util.AttributeSet $r1;
        android.support.v4.view.ViewPager$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.v4.view.ViewPager$LayoutParams;

        $r3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.v4.view.ViewPager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.ViewGroup$LayoutParams $r1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    public android.support.v4.view.PagerAdapter getAdapter()
    {
        android.support.v4.view.ViewPager $r0;
        android.support.v4.view.PagerAdapter r1;

        $r0 := @this: android.support.v4.view.ViewPager;

        r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        return r1;
    }

    public int getCurrentItem()
    {
        android.support.v4.view.ViewPager $r0;
        int i0;

        $r0 := @this: android.support.v4.view.ViewPager;

        i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        return i0;
    }

    public int getOffscreenPageLimit()
    {
        android.support.v4.view.ViewPager $r0;
        int i0;

        $r0 := @this: android.support.v4.view.ViewPager;

        i0 = $r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        return i0;
    }

    public int getPageMargin()
    {
        android.support.v4.view.ViewPager $r0;
        int i0;

        $r0 := @this: android.support.v4.view.ViewPager;

        i0 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        return i0;
    }

    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.View $r1;
        android.view.ViewParent $r2;
        boolean $z0;
        android.support.v4.view.ViewPager$ItemInfo $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.View;

     label1:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 == $r0 goto label4;

        if $r2 == null goto label2;

        $z0 = $r2 instanceof android.view.View;

        if $z0 != 0 goto label3;

     label2:
        return null;

     label3:
        $r1 = (android.view.View) $r2;

        goto label1;

     label4:
        $r3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>($r1);

        return $r3;
    }

    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.View $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.util.ArrayList $r3;
        android.support.v4.view.ViewPager$ItemInfo $r4;
        android.support.v4.view.PagerAdapter $r5;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.View;

        $i0 = 0;

     label1:
        $r3 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label3;

        $r3 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (android.support.v4.view.ViewPager$ItemInfo) $r2;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r2 = $r4.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        $z0 = virtualinvoke $r5.<android.support.v4.view.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label2;

        return $r4;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $i1 = 0;

     label1:
        $r1 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label3;

        $r1 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (android.support.v4.view.ViewPager$ItemInfo) $r2;

        $i2 = $r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i2 != $i0 goto label2;

        return $r3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    void initViewPager()
    {
        android.support.v4.view.ViewPager $r0;
        float $f0, $f1;
        android.view.animation.Interpolator $r1;
        android.content.Context $r2;
        android.widget.Scroller $r3;
        android.view.ViewConfiguration $r4;
        int $i0;
        android.support.v4.widget.EdgeEffectCompat $r5;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;
        android.support.v4.view.ViewPager$MyAccessibilityDelegate $r8;

        $r0 := @this: android.support.v4.view.ViewPager;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setWillNotDraw(boolean)>(0);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setDescendantFocusability(int)>(262144);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setFocusable(boolean)>(1);

        $r2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.content.Context getContext()>();

        $r3 = new android.widget.Scroller;

        $r1 = <android.support.v4.view.ViewPager: android.view.animation.Interpolator sInterpolator>;

        specialinvoke $r3.<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r2, $r1);

        $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller> = $r3;

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>($r4);

        $r0.<android.support.v4.view.ViewPager: int mTouchSlop> = $i0;

        $i0 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        $r0.<android.support.v4.view.ViewPager: int mMinimumVelocity> = $i0;

        $i0 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        $r0.<android.support.v4.view.ViewPager: int mMaximumVelocity> = $i0;

        $r5 = new android.support.v4.widget.EdgeEffectCompat;

        specialinvoke $r5.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r2);

        $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge> = $r5;

        $r5 = new android.support.v4.widget.EdgeEffectCompat;

        specialinvoke $r5.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r2);

        $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge> = $r5;

        $r6 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r7.<android.util.DisplayMetrics: float density>;

        $f1 = 25.0F * $f0;

        $i0 = (int) $f1;

        $r0.<android.support.v4.view.ViewPager: int mFlingDistance> = $i0;

        $f1 = 2.0F * $f0;

        $i0 = (int) $f1;

        $r0.<android.support.v4.view.ViewPager: int mCloseEnough> = $i0;

        $f0 = 16.0F * $f0;

        $i0 = (int) $f0;

        $r0.<android.support.v4.view.ViewPager: int mDefaultGutterSize> = $i0;

        $r8 = new android.support.v4.view.ViewPager$MyAccessibilityDelegate;

        specialinvoke $r8.<android.support.v4.view.ViewPager$MyAccessibilityDelegate: void <init>(android.support.v4.view.ViewPager)>($r0);

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>($r0, $r8);

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>($r0);

        if $i0 != 0 goto label1;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r0, 1);

     label1:
        return;
    }

    public boolean isFakeDragging()
    {
        android.support.v4.view.ViewPager $r0;
        boolean z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        z0 = $r0.<android.support.v4.view.ViewPager: boolean mFakeDragging>;

        return z0;
    }

    protected void onAttachedToWindow()
    {
        android.support.v4.view.ViewPager $r0;

        $r0 := @this: android.support.v4.view.ViewPager;

        specialinvoke $r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        $r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 1;

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.support.v4.view.ViewPager $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.drawable.Drawable $r2;
        java.util.ArrayList $r3;
        android.support.v4.view.PagerAdapter $r4;
        java.lang.Object $r5;
        android.support.v4.view.ViewPager$ItemInfo $r6, $r7;
        byte $b7;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>($r1);

        $i3 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        if $i3 <= 0 goto label8;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if $r2 == null goto label8;

        $r3 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label8;

        $r4 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r4 == null goto label8;

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $i4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i5 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f0 = (float) $i5;

        $f1 = (float) $i4;

        $f0 = $f0 / $f1;

        $i5 = 0;

        $r3 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        $f2 = $r6.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $r3 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i6 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i0 = $r6.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r3 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = $i6 + -1;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        $i1 = $r7.<android.support.v4.view.ViewPager$ItemInfo: int position>;

     label1:
        if $i0 >= $i1 goto label8;

     label2:
        $i2 = $r6.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i0 <= $i2 goto label3;

        if $i5 >= $i6 goto label3;

        $r3 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i5 = $i5 + 1;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r6 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        goto label2;

     label3:
        $i2 = $r6.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i0 != $i2 goto label6;

        $f1 = $r6.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f2 = $r6.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f1 = $f1 + $f2;

        $f2 = (float) $i4;

        $f1 = $f1 * $f2;

        $f2 = $r6.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f3 = $r6.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f2 = $f2 + $f3;

        $f2 = $f2 + $f0;

     label4:
        $i2 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f3 = (float) $i2;

        $f3 = $f3 + $f1;

        $f4 = (float) $i3;

        $b7 = $f3 cmpl $f4;

        if $b7 <= 0 goto label5;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        $i8 = (int) $f1;

        $i2 = $r0.<android.support.v4.view.ViewPager: int mTopPageBounds>;

        $i9 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f3 = (float) $i9;

        $f3 = $f3 + $f1;

        $f3 = $f3 + 0.5F;

        $i9 = (int) $f3;

        $i10 = $r0.<android.support.v4.view.ViewPager: int mBottomPageBounds>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i8, $i2, $i9, $i10);

        $r2 = $r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label5:
        $i2 = $i3 + $i4;

        $f3 = (float) $i2;

        $b7 = $f1 cmpl $f3;

        if $b7 <= 0 goto label7;

        return;

     label6:
        $r4 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $f3 = virtualinvoke $r4.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i0);

        $f1 = $f2 + $f3;

        $f4 = (float) $i4;

        $f1 = $f1 * $f4;

        $f3 = $f3 + $f0;

        $f2 = $f2 + $f3;

        goto label4;

     label7:
        $i0 = $i0 + 1;

        goto label1;

     label8:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.view.VelocityTracker $r2;
        boolean $z0;
        byte $b3;
        android.widget.Scroller $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $i0 = $i0 & 255;

        if $i0 == 3 goto label01;

        if $i0 != 1 goto label03;

     label01:
        $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 0;

        $r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 0;

        $r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label02;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

        $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = null;

     label02:
        return 0;

     label03:
        if $i0 == 0 goto label05;

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z0 == 0 goto label04;

        return 1;

     label04:
        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag>;

        if $z0 == 0 goto label05;

        return 0;

     label05:
        lookupswitch($i0)
        {
            case 0: goto label14;
            case 2: goto label08;
            case 6: goto label16;
            default: goto label06;
        };

     label06:
        $r2 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label07;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = $r2;

     label07:
        $r2 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        return $z0;

     label08:
        $i0 = $r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        if $i0 == -1 goto label06;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i0);

        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i0);

        $f0 = $r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $f0 = $f1 - $f0;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i0);

        $f4 = $r0.<android.support.v4.view.ViewPager: float mLastMotionY>;

        $f4 = $f3 - $f4;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        $b3 = $f0 cmpl 0.0F;

        if $b3 == 0 goto label09;

        $f5 = $r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $z0 = specialinvoke $r0.<android.support.v4.view.ViewPager: boolean isGutterDrag(float,float)>($f5, $f0);

        if $z0 != 0 goto label09;

        $i0 = (int) $f0;

        $i1 = (int) $f1;

        $i2 = (int) $f3;

        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)>($r0, 0, $i0, $i1, $i2);

        if $z0 == 0 goto label09;

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f1;

        $r0.<android.support.v4.view.ViewPager: float mInitialMotionX> = $f1;

        $r0.<android.support.v4.view.ViewPager: float mLastMotionY> = $f3;

        $r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 1;

        return 0;

     label09:
        $i0 = $r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f3 = (float) $i0;

        $b3 = $f2 cmpl $f3;

        if $b3 <= 0 goto label13;

        $b3 = $f2 cmpl $f4;

        if $b3 <= 0 goto label13;

        $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(1);

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label12;

        $f0 = $r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f2 = (float) $i0;

        $f0 = $f0 + $f2;

     label10:
        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f0;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

     label11:
        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z0 == 0 goto label06;

        $z0 = specialinvoke $r0.<android.support.v4.view.ViewPager: boolean performDrag(float)>($f1);

        if $z0 == 0 goto label06;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

        goto label06;

     label12:
        $f0 = $r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f2 = (float) $i0;

        $f0 = $f0 - $f2;

        goto label10;

     label13:
        $i0 = $r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f0 = (float) $i0;

        $b3 = $f4 cmpl $f0;

        if $b3 <= 0 goto label11;

        $r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 1;

        goto label11;

     label14:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $r0.<android.support.v4.view.ViewPager: float mInitialMotionX> = $f1;

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f1;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r0.<android.support.v4.view.ViewPager: float mLastMotionY> = $f1;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        $r0.<android.support.v4.view.ViewPager: int mActivePointerId> = $i0;

        $r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 0;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r3.<android.widget.Scroller: boolean computeScrollOffset()>();

        $i0 = $r0.<android.support.v4.view.ViewPager: int mScrollState>;

        if $i0 != 2 goto label15;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r3.<android.widget.Scroller: int getFinalX()>();

        $r3 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i1 = virtualinvoke $r3.<android.widget.Scroller: int getCurrX()>();

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCloseEnough>;

        if $i0 <= $i1 goto label15;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r3.<android.widget.Scroller: void abortAnimation()>();

        $r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate()>();

        $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(1);

        goto label06;

     label15:
        specialinvoke $r0.<android.support.v4.view.ViewPager: void completeScroll()>();

        $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 0;

        goto label06;

     label16:
        specialinvoke $r0.<android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);

        goto label06;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.view.ViewPager $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.view.ViewPager$LayoutParams $r3;
        android.support.v4.view.ViewPager$ItemInfo $r4;
        float $f0, $f1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r0.<android.support.v4.view.ViewPager: boolean mInLayout> = 1;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate()>();

        $r0.<android.support.v4.view.ViewPager: boolean mInLayout> = 0;

        $i7 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        $i0 = $i2 - $i0;

        $i1 = $i3 - $i1;

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i8 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        $i10 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingBottom()>();

        $i11 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $i9 = 0;

        $i5 = 0;

     label01:
        if $i5 >= $i7 goto label13;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i5);

        $i4 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i4 == 8 goto label06;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.view.ViewPager$LayoutParams) $r2;

        $z0 = $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 == 0 goto label06;

        $i4 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        $i4 = $i4 & 7;

        $i6 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        $i6 = $i6 & 112;

        lookupswitch($i4)
        {
            case 1: goto label08;
            case 2: goto label02;
            case 3: goto label07;
            case 4: goto label02;
            case 5: goto label09;
            default: goto label02;
        };

     label02:
        $i4 = $i2;

     label03:
        lookupswitch($i6)
        {
            case 16: goto label11;
            case 48: goto label10;
            case 80: goto label12;
            default: goto label04;
        };

     label04:
        $i6 = $i3;

     label05:
        $i4 = $i4 + $i11;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i12 = $i12 + $i4;

        $i13 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i13 = $i13 + $i6;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i4, $i6, $i12, $i13);

        $i9 = $i9 + 1;

     label06:
        $i5 = $i5 + 1;

        goto label01;

     label07:
        $i4 = $i2;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = $i2 + $i12;

        goto label03;

     label08:
        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i4 = $i0 - $i4;

        $i4 = $i4 / 2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i2);

        goto label03;

     label09:
        $i4 = $i0 - $i8;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i4 = $i4 - $i12;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i8 = $i8 + $i12;

        goto label03;

     label10:
        $i6 = $i3;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i3 = $i3 + $i12;

        goto label05;

     label11:
        $i6 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i6 = $i1 - $i6;

        $i6 = $i6 / 2;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i3);

        goto label05;

     label12:
        $i6 = $i1 - $i10;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i6 = $i6 - $i12;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i10 = $i10 + $i12;

        goto label05;

     label13:
        $i11 = 0;

     label14:
        if $i11 >= $i7 goto label17;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i11);

        $i5 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i5 == 8 goto label16;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.view.ViewPager$LayoutParams) $r2;

        $z0 = $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 != 0 goto label16;

        $r4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>($r1);

        if $r4 == null goto label16;

        $f0 = (float) $i0;

        $f1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f0 = $f0 * $f1;

        $i5 = (int) $f0;

        $i5 = $i2 + $i5;

        $i4 = $i3;

        $z0 = $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean needsMeasure>;

        if $z0 == 0 goto label15;

        $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean needsMeasure> = 0;

        $i6 = $i0 - $i2;

        $i6 = $i6 - $i8;

        $f0 = (float) $i6;

        $f1 = $r3.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor>;

        $f0 = $f0 * $f1;

        $i6 = (int) $f0;

        $i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, 1073741824);

        $i12 = $i1 - $i3;

        $i12 = $i12 - $i10;

        $i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i12, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i6, $i12);

     label15:
        $i6 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i6 = $i6 + $i5;

        $i12 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i12 = $i12 + $i4;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i5, $i4, $i6, $i12);

     label16:
        $i11 = $i11 + 1;

        goto label14;

     label17:
        $r0.<android.support.v4.view.ViewPager: int mTopPageBounds> = $i3;

        $i0 = $i1 - $i10;

        $r0.<android.support.v4.view.ViewPager: int mBottomPageBounds> = $i0;

        $r0.<android.support.v4.view.ViewPager: int mDecorChildCount> = $i9;

        $r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 0;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.view.ViewPager$LayoutParams $r3;
        boolean $z0, $z1;
        float $f0, $f1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <android.support.v4.view.ViewPager: int getDefaultSize(int,int)>(0, $i0);

        $i1 = staticinvoke <android.support.v4.view.ViewPager: int getDefaultSize(int,int)>(0, $i1);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setMeasuredDimension(int,int)>($i0, $i1);

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getMeasuredWidth()>();

        $i1 = $i0 / 10;

        $i4 = $r0.<android.support.v4.view.ViewPager: int mDefaultGutterSize>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i4);

        $r0.<android.support.v4.view.ViewPager: int mGutterSize> = $i1;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getMeasuredHeight()>();

        $i4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i1 = $i1 - $i4;

        $i4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingBottom()>();

        $i1 = $i1 - $i4;

        $i4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        $i5 = 0;

     label01:
        if $i5 >= $i4 goto label14;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i5);

        $i6 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i6 == 8 goto label09;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.view.ViewPager$LayoutParams) $r2;

        if $r3 == null goto label09;

        $z0 = $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 == 0 goto label09;

        $i6 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        $i2 = $i6 & 7;

        $i6 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        $i3 = $i6 & 112;

        $i7 = -2147483648;

        $i6 = -2147483648;

        if $i3 == 48 goto label02;

        if $i3 != 80 goto label10;

     label02:
        $z0 = 1;

     label03:
        if $i2 == 3 goto label04;

        if $i2 != 5 goto label11;

     label04:
        $z1 = 1;

     label05:
        if $z0 == 0 goto label12;

        $i7 = 1073741824;

     label06:
        $i3 = $i0;

        $i2 = $i1;

        $i8 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int width>;

        if $i8 == -2 goto label07;

        $i7 = 1073741824;

        $i8 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int width>;

        if $i8 == -1 goto label07;

        $i3 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int width>;

     label07:
        $i8 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int height>;

        if $i8 == -2 goto label08;

        $i6 = 1073741824;

        $i8 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int height>;

        if $i8 == -1 goto label08;

        $i2 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int height>;

     label08:
        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, $i7);

        $i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, $i6);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i7, $i6);

        if $z0 == 0 goto label13;

        $i6 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i1 = $i1 - $i6;

     label09:
        $i5 = $i5 + 1;

        goto label01;

     label10:
        $z0 = 0;

        goto label03;

     label11:
        $z1 = 0;

        goto label05;

     label12:
        if $z1 == 0 goto label06;

        $i6 = 1073741824;

        goto label06;

     label13:
        if $z1 == 0 goto label09;

        $i6 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i0 = $i0 - $i6;

        goto label09;

     label14:
        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 1073741824);

        $r0.<android.support.v4.view.ViewPager: int mChildWidthMeasureSpec> = $i4;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

        $r0.<android.support.v4.view.ViewPager: int mChildHeightMeasureSpec> = $i1;

        $r0.<android.support.v4.view.ViewPager: boolean mInLayout> = 1;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate()>();

        $r0.<android.support.v4.view.ViewPager: boolean mInLayout> = 0;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        $i4 = 0;

     label15:
        if $i4 >= $i1 goto label18;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i5 == 8 goto label17;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.view.ViewPager$LayoutParams) $r2;

        if $r3 == null goto label16;

        $z0 = $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 != 0 goto label17;

     label16:
        $f0 = (float) $i0;

        $f1 = $r3.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor>;

        $f0 = $f0 * $f1;

        $i5 = (int) $f0;

        $i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, 1073741824);

        $i6 = $r0.<android.support.v4.view.ViewPager: int mChildHeightMeasureSpec>;

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i5, $i6);

     label17:
        $i4 = $i4 + 1;

        goto label15;

     label18:
        return;
    }

    protected void onPageScrolled(int, float, int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float $f0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.view.ViewPager$LayoutParams $r3;
        boolean $z0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r4;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        $i3 = $r0.<android.support.v4.view.ViewPager: int mDecorChildCount>;

        if $i3 <= 0 goto label09;

        $i3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $i4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        $i5 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        $i6 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i7 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        $i8 = 0;

     label01:
        if $i8 >= $i7 goto label09;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i8);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.view.ViewPager$LayoutParams) $r2;

        $z0 = $r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 != 0 goto label03;

     label02:
        $i8 = $i8 + 1;

        goto label01;

     label03:
        $i2 = $r3.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        $i2 = $i2 & 7;

        lookupswitch($i2)
        {
            case 1: goto label07;
            case 2: goto label04;
            case 3: goto label06;
            case 4: goto label04;
            case 5: goto label08;
            default: goto label04;
        };

     label04:
        $i2 = $i4;

     label05:
        $i2 = $i2 + $i3;

        $i9 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i2 = $i2 - $i9;

        if $i2 == 0 goto label02;

        virtualinvoke $r1.<android.view.View: void offsetLeftAndRight(int)>($i2);

        goto label02;

     label06:
        $i2 = $i4;

        $i9 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i4 = $i4 + $i9;

        goto label05;

     label07:
        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = $i6 - $i2;

        $i2 = $i2 / 2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i4);

        goto label05;

     label08:
        $i2 = $i6 - $i5;

        $i9 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = $i2 - $i9;

        $i9 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i5 = $i5 + $i9;

        goto label05;

     label09:
        $r4 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if $r4 == null goto label10;

        $r4 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r4.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($i0, $f0, $i1);

     label10:
        $r4 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if $r4 == null goto label11;

        $r4 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        interfaceinvoke $r4.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($i0, $f0, $i1);

     label11:
        $r0.<android.support.v4.view.ViewPager: boolean mCalledSuper> = 1;

        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3, $i5;
        android.graphics.Rect $r1;
        byte $b4;
        android.view.View $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        $i3 = $i0 & 2;

        if $i3 == 0 goto label2;

        $i3 = 0;

        $b4 = 1;

     label1:
        if $i3 == $i2 goto label4;

        $r2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i3);

        $i1 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label3;

        $r3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>($r2);

        if $r3 == null goto label3;

        $i5 = $r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i5 != $i1 goto label3;

        $z0 = virtualinvoke $r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);

        if $z0 == 0 goto label3;

        return 1;

     label2:
        $i3 = $i2 + -1;

        $b4 = -1;

        $i2 = -1;

        goto label1;

     label3:
        $i3 = $i3 + $b4;

        goto label1;

     label4:
        return 0;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v4.view.ViewPager $r0;
        android.os.Parcelable $r1;
        boolean $z0;
        android.support.v4.view.ViewPager$SavedState $r2;
        android.support.v4.view.PagerAdapter $r3;
        java.lang.ClassLoader $r4;
        int $i0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof android.support.v4.view.ViewPager$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (android.support.v4.view.ViewPager$SavedState) $r1;

        $r1 = virtualinvoke $r2.<android.support.v4.view.ViewPager$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r3 == null goto label2;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r1 = $r2.<android.support.v4.view.ViewPager$SavedState: android.os.Parcelable adapterState>;

        $r4 = $r2.<android.support.v4.view.ViewPager$SavedState: java.lang.ClassLoader loader>;

        virtualinvoke $r3.<android.support.v4.view.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>($r1, $r4);

        $i0 = $r2.<android.support.v4.view.ViewPager$SavedState: int position>;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($i0, 0, 1);

        return;

     label2:
        $i0 = $r2.<android.support.v4.view.ViewPager$SavedState: int position>;

        $r0.<android.support.v4.view.ViewPager: int mRestoredCurItem> = $i0;

        $r1 = $r2.<android.support.v4.view.ViewPager$SavedState: android.os.Parcelable adapterState>;

        $r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState> = $r1;

        $r4 = $r2.<android.support.v4.view.ViewPager$SavedState: java.lang.ClassLoader loader>;

        $r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = $r4;

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.support.v4.view.ViewPager $r0;
        android.support.v4.view.ViewPager$SavedState $r1;
        android.os.Parcelable $r2;
        int $i0;
        android.support.v4.view.PagerAdapter $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r2 = specialinvoke $r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new android.support.v4.view.ViewPager$SavedState;

        specialinvoke $r1.<android.support.v4.view.ViewPager$SavedState: void <init>(android.os.Parcelable)>($r2);

        $i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $r1.<android.support.v4.view.ViewPager$SavedState: int position> = $i0;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r3 == null goto label1;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()>();

        $r1.<android.support.v4.view.ViewPager$SavedState: android.os.Parcelable adapterState> = $r2;

     label1:
        return $r1;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        if $i0 == $i2 goto label1;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $i3 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>($i0, $i2, $i1, $i3);

     label1:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.view.ViewPager $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i4;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1;
        android.support.v4.view.PagerAdapter $r2;
        android.view.VelocityTracker $r3;
        android.widget.Scroller $r4;
        byte $b3;
        android.support.v4.view.ViewPager$ItemInfo $r5;
        android.support.v4.widget.EdgeEffectCompat $r6;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mFakeDragging>;

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i1 != 0 goto label02;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getEdgeFlags()>();

        if $i1 == 0 goto label02;

        return 0;

     label02:
        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r2 == null goto label03;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i1 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i1 != 0 goto label04;

     label03:
        return 0;

     label04:
        $r3 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r3 != null goto label05;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = $r3;

     label05:
        $r3 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $z0 = 0;

        $i1 = $i1 & 255;

        lookupswitch($i1)
        {
            case 0: goto label08;
            case 1: goto label13;
            case 2: goto label09;
            case 3: goto label14;
            case 4: goto label06;
            case 5: goto label15;
            case 6: goto label16;
            default: goto label06;
        };

     label06:
        if $z0 == 0 goto label07;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

     label07:
        return 1;

     label08:
        $r4 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r4.<android.widget.Scroller: void abortAnimation()>();

        $r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate()>();

        $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(1);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $r0.<android.support.v4.view.ViewPager: float mInitialMotionX> = $f0;

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f0;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        $r0.<android.support.v4.view.ViewPager: int mActivePointerId> = $i1;

        goto label06;

     label09:
        $z1 = $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z1 != 0 goto label11;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i1);

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);

        $f1 = $r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $f1 = $f0 - $f1;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1);

        $f3 = $r0.<android.support.v4.view.ViewPager: float mLastMotionY>;

        $f2 = $f2 - $f3;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $i1 = $r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f3 = (float) $i1;

        $b3 = $f1 cmpl $f3;

        if $b3 <= 0 goto label11;

        $b3 = $f1 cmpl $f2;

        if $b3 <= 0 goto label11;

        $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 1;

        $f1 = $r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $f0 = $f0 - $f1;

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label12;

        $f0 = $r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f1 = (float) $i1;

        $f0 = $f0 + $f1;

     label10:
        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f0;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(1);

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

     label11:
        $z1 = $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z1 == 0 goto label06;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i1);

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);

        $z0 = specialinvoke $r0.<android.support.v4.view.ViewPager: boolean performDrag(float)>($f0);

        $z0 = 0 | $z0;

        goto label06;

     label12:
        $f0 = $r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f1 = (float) $i1;

        $f0 = $f0 - $f1;

        goto label10;

     label13:
        $z1 = $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z1 == 0 goto label06;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mMaximumVelocity>;

        $f0 = (float) $i1;

        virtualinvoke $r3.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f0);

        $i1 = $r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r3, $i1);

        $i1 = (int) $f0;

        $r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 1;

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $r5 = specialinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>();

        $i0 = $r5.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $f0 = (float) $i4;

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

        $f1 = $r5.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f0 = $f0 - $f1;

        $f1 = $r5.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f0 = $f0 / $f1;

        $i2 = $r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i2);

        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i2);

        $f2 = $r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $f1 = $f1 - $f2;

        $i2 = (int) $f1;

        $i0 = specialinvoke $r0.<android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>($i0, $f0, $i1, $i2);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>($i0, 1, 1, $i1);

        $r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void endDrag()>();

        $r6 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        $r6 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $z1 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        $z0 = $z0 | $z1;

        goto label06;

     label14:
        $z1 = $r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z1 == 0 goto label06;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($i1, 1, 1);

        $r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void endDrag()>();

        $r6 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        $r6 = $r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $z1 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        $z0 = $z0 | $z1;

        goto label06;

     label15:
        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f0;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);

        $r0.<android.support.v4.view.ViewPager: int mActivePointerId> = $i1;

        goto label06;

     label16:
        specialinvoke $r0.<android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);

        $i1 = $r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i1);

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);

        $r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f0;

        goto label06;
    }

    boolean pageLeft()
    {
        android.support.v4.view.ViewPager $r0;
        int $i0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i0 <= 0 goto label1;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i0 = $i0 + -1;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>($i0, 1);

        return 1;

     label1:
        return 0;
    }

    boolean pageRight()
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1;
        android.support.v4.view.PagerAdapter $r1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r1 == null goto label1;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i0 = $i0 + -1;

        if $i1 >= $i0 goto label1;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i1 = $i1 + 1;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>($i1, 1);

        return 1;

     label1:
        return 0;
    }

    void populate()
    {
        android.support.v4.view.ViewPager $r0;
        int $i0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate(int)>($i0);

        return;
    }

    void populate(int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        float $f0, $f1, $f2;
        android.support.v4.view.ViewPager$ItemInfo $r1, $r4, $r7;
        android.support.v4.view.PagerAdapter $r2;
        boolean $z0;
        android.os.IBinder $r3;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        byte $b6;
        android.view.View $r8;
        android.view.ViewGroup$LayoutParams $r9;
        android.support.v4.view.ViewPager$LayoutParams $r10;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $r1 = null;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i1 == $i0 goto label01;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>($i1);

        $r0.<android.support.v4.view.ViewPager: int mCurItem> = $i0;

     label01:
        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r2 != null goto label02;

        return;

     label02:
        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mPopulatePending>;

        if $z0 != 0 goto label40;

        $r3 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.os.IBinder getWindowToken()>();

        if $r3 == null goto label40;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r2.<android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)>($r0);

        $i1 = $r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i0 = $i0 - $i1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i0 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i3 = $i0 + -1;

        $i4 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i1 = $i4 + $i1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i1);

        $r4 = null;

        $i3 = 0;

     label03:
        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i4 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i3 >= $i4 goto label04;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

        $i4 = $r7.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i5 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i4 < $i5 goto label16;

        $i4 = $r7.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i5 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i4 != $i5 goto label04;

        $r4 = $r7;

     label04:
        if $r4 != null goto label05;

        if $i0 <= 0 goto label05;

        $i4 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $r4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>($i4, $i3);

     label05:
        if $r4 == null goto label12;

        $f1 = 0.0F;

        $i4 = $i3 + -1;

        if $i4 < 0 goto label17;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

     label06:
        $f0 = $r4.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f0 = 2.0F - $f0;

        $i5 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i5 = $i5 + -1;

     label07:
        if $i5 < 0 goto label08;

        $b6 = $f1 cmpl $f0;

        if $b6 < 0 goto label21;

        if $i5 >= $i2 goto label21;

        if $r7 != null goto label18;

     label08:
        $f1 = $r4.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $i2 = $i3 + 1;

        $b6 = $f1 cmpg 2.0F;

        if $b6 >= 0 goto label11;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i4 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 >= $i4 goto label25;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

     label09:
        $i4 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i4 = $i4 + 1;

     label10:
        if $i4 >= $i0 goto label11;

        $b6 = $f1 cmpl 2.0F;

        if $b6 < 0 goto label29;

        if $i4 <= $i1 goto label29;

        if $r7 != null goto label26;

     label11:
        specialinvoke $r0.<android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>($r4, $i3, $r1);

     label12:
        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $r4 == null goto label33;

        $r6 = $r4.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

     label13:
        virtualinvoke $r2.<android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>($r0, $i0, $r6);

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r2.<android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)>($r0);

        $i0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        $i1 = 0;

     label14:
        if $i1 >= $i0 goto label34;

        $r8 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i1);

        $r9 = virtualinvoke $r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r10 = (android.support.v4.view.ViewPager$LayoutParams) $r9;

        $z0 = $r10.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 != 0 goto label15;

        $f1 = $r10.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor>;

        $b6 = $f1 cmpl 0.0F;

        if $b6 != 0 goto label15;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>($r8);

        if $r1 == null goto label15;

        $f1 = $r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $r10.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor> = $f1;

     label15:
        $i1 = $i1 + 1;

        goto label14;

     label16:
        $i3 = $i3 + 1;

        goto label03;

     label17:
        $r7 = null;

        goto label06;

     label18:
        $i7 = $r7.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i5 != $i7 goto label19;

        $z0 = $r7.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling>;

        if $z0 != 0 goto label19;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>($i4);

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r6 = $r7.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r2.<android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>($r0, $i5, $r6);

        $i4 = $i4 + -1;

        $i3 = $i3 + -1;

        if $i4 < 0 goto label20;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

     label19:
        $i5 = $i5 + -1;

        goto label07;

     label20:
        $r7 = null;

        goto label19;

     label21:
        if $r7 == null goto label23;

        $i7 = $r7.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i5 != $i7 goto label23;

        $f2 = $r7.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f1 = $f1 + $f2;

        $i4 = $i4 + -1;

        if $i4 < 0 goto label22;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

        goto label19;

     label22:
        $r7 = null;

        goto label19;

     label23:
        $i7 = $i4 + 1;

        $r7 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>($i5, $i7);

        $f2 = $r7.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f1 = $f1 + $f2;

        $i3 = $i3 + 1;

        if $i4 < 0 goto label24;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

        goto label19;

     label24:
        $r7 = null;

        goto label19;

     label25:
        $r7 = null;

        goto label09;

     label26:
        $i5 = $r7.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i4 != $i5 goto label27;

        $z0 = $r7.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling>;

        if $z0 != 0 goto label27;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>($i2);

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r6 = $r7.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r2.<android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>($r0, $i4, $r6);

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i5 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 >= $i5 goto label28;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

     label27:
        $i4 = $i4 + 1;

        goto label10;

     label28:
        $r7 = null;

        goto label27;

     label29:
        if $r7 == null goto label31;

        $i5 = $r7.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i4 != $i5 goto label31;

        $f0 = $r7.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f1 = $f1 + $f0;

        $i2 = $i2 + 1;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i5 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 >= $i5 goto label30;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

        goto label27;

     label30:
        $r7 = null;

        goto label27;

     label31:
        $r7 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>($i4, $i2);

        $i2 = $i2 + 1;

        $f0 = $r7.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f1 = $f1 + $f0;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i5 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 >= $i5 goto label32;

        $r5 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

        goto label27;

     label32:
        $r7 = null;

        goto label27;

     label33:
        $r6 = null;

        goto label13;

     label34:
        $z0 = virtualinvoke $r0.<android.support.v4.view.ViewPager: boolean hasFocus()>();

        if $z0 == 0 goto label40;

        $r8 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View findFocus()>();

        if $r8 == null goto label39;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)>($r8);

     label35:
        if $r1 == null goto label36;

        $i0 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i0 == $i1 goto label40;

     label36:
        $i0 = 0;

     label37:
        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if $i0 >= $i1 goto label40;

        $r8 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>($i0);

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>($r8);

        if $r1 == null goto label38;

        $i1 = $r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i3 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i1 != $i3 goto label38;

        $z0 = virtualinvoke $r8.<android.view.View: boolean requestFocus(int)>(2);

        if $z0 != 0 goto label40;

     label38:
        $i0 = $i0 + 1;

        goto label37;

     label39:
        $r1 = null;

        goto label35;

     label40:
        return;
    }

    public void setAdapter(android.support.v4.view.PagerAdapter)
    {
        android.support.v4.view.ViewPager $r0;
        android.support.v4.view.PagerAdapter $r1, $r2, $r7;
        android.support.v4.view.ViewPager$PagerObserver $r3;
        int $i0, $i1;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        android.support.v4.view.ViewPager$ItemInfo $r6;
        android.os.Parcelable $r8;
        java.lang.ClassLoader $r9;
        android.support.v4.view.ViewPager$OnAdapterChangeListener $r10;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.support.v4.view.PagerAdapter;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r2 == null goto label3;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PagerObserver mObserver>;

        virtualinvoke $r2.<android.support.v4.view.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>($r3);

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r2.<android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)>($r0);

        $i0 = 0;

     label1:
        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label2;

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i1 = $r6.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r5 = $r6.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r2.<android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>($r0, $i1, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r2.<android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)>($r0);

        $r4 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        specialinvoke $r0.<android.support.v4.view.ViewPager: void removeNonDecorViews()>();

        $r0.<android.support.v4.view.ViewPager: int mCurItem> = 0;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>(0, 0);

     label3:
        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter> = $r1;

        $r7 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r7 == null goto label5;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PagerObserver mObserver>;

        if $r3 != null goto label4;

        $r3 = new android.support.v4.view.ViewPager$PagerObserver;

        specialinvoke $r3.<android.support.v4.view.ViewPager$PagerObserver: void <init>(android.support.v4.view.ViewPager,android.support.v4.view.ViewPager$1)>($r0, null);

        $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PagerObserver mObserver> = $r3;

     label4:
        $r7 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r3 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PagerObserver mObserver>;

        virtualinvoke $r7.<android.support.v4.view.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r3);

        $r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        $r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 1;

        $i0 = $r0.<android.support.v4.view.ViewPager: int mRestoredCurItem>;

        if $i0 < 0 goto label6;

        $r7 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r8 = $r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState>;

        $r9 = $r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader>;

        virtualinvoke $r7.<android.support.v4.view.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>($r8, $r9);

        $i0 = $r0.<android.support.v4.view.ViewPager: int mRestoredCurItem>;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($i0, 0, 1);

        $r0.<android.support.v4.view.ViewPager: int mRestoredCurItem> = -1;

        $r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        $r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

     label5:
        $r10 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener>;

        if $r10 == null goto label7;

        if $r2 == $r1 goto label7;

        $r10 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener>;

        interfaceinvoke $r10.<android.support.v4.view.ViewPager$OnAdapterChangeListener: void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)>($r2, $r1);

        return;

     label6:
        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate()>();

        goto label5;

     label7:
        return;
    }

    public void setCurrentItem(int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        $z0 = $r0.<android.support.v4.view.ViewPager: boolean mFirstLayout>;

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($i0, $z0, 0);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void setCurrentItem(int, boolean)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($i0, $z0, 0);

        return;
    }

    void setCurrentItemInternal(int, boolean, boolean)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>($i0, $z0, $z1, 0);

        return;
    }

    void setCurrentItemInternal(int, boolean, boolean, int)
    {
        android.support.v4.view.ViewPager $r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        android.support.v4.view.PagerAdapter $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        android.support.v4.view.ViewPager$ItemInfo $r4;
        android.support.v4.view.ViewPager$OnPageChangeListener $r5;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i2 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $z2 = 1;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r1 == null goto label01;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i1 = virtualinvoke $r1.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i1 > 0 goto label02;

     label01:
        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label02:
        if $z1 != 0 goto label03;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i1 != $i2 goto label03;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 == 0 goto label03;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label03:
        if $i2 >= 0 goto label07;

        $i2 = 0;

     label04:
        $i1 = $r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        $i3 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i3 = $i3 + $i1;

        if $i2 > $i3 goto label05;

        $i3 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i1 = $i3 - $i1;

        if $i2 >= $i1 goto label08;

     label05:
        $i1 = 0;

     label06:
        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 >= $i3 goto label08;

        $r2 = $r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (android.support.v4.view.ViewPager$ItemInfo) $r3;

        $r4.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling> = 1;

        $i1 = $i1 + 1;

        goto label06;

     label07:
        $r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i1 = virtualinvoke $r1.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i2 < $i1 goto label04;

        $r1 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i2 = virtualinvoke $r1.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i2 = $i2 + -1;

        goto label04;

     label08:
        $i1 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i1 == $i2 goto label12;

     label09:
        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate(int)>($i2);

        $r4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>($i2);

        $i1 = 0;

        if $r4 == null goto label10;

        $i1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $f1 = (float) $i1;

        $f2 = $r0.<android.support.v4.view.ViewPager: float mFirstOffset>;

        $f3 = $r4.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f0 = $r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f3, $f0);

        $f2 = staticinvoke <java.lang.Math: float max(float,float)>($f2, $f0);

        $f1 = $f1 * $f2;

        $i1 = (int) $f1;

     label10:
        if $z0 == 0 goto label13;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>($i1, 0, $i0);

        if $z2 == 0 goto label11;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if $r5 == null goto label11;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r5.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>($i2);

     label11:
        if $z2 == 0 goto label16;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if $r5 == null goto label16;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        interfaceinvoke $r5.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>($i2);

        return;

     label12:
        $z2 = 0;

        goto label09;

     label13:
        if $z2 == 0 goto label14;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if $r5 == null goto label14;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r5.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>($i2);

     label14:
        if $z2 == 0 goto label15;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if $r5 == null goto label15;

        $r5 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        interfaceinvoke $r5.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>($i2);

     label15:
        specialinvoke $r0.<android.support.v4.view.ViewPager: void completeScroll()>();

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>($i1, 0);

     label16:
        return;
    }

    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    {
        android.support.v4.view.ViewPager $r0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1, r2;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.support.v4.view.ViewPager$OnPageChangeListener;

        r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener> = $r1;

        return r2;
    }

    public void setOffscreenPageLimit(int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        if $i0 >= 1 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested offscreen page limit ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" too small; defaulting to ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ViewPager", $r2);

        $i0 = 1;

     label1:
        $i1 = $r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        if $i0 == $i1 goto label2;

        $r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit> = $i0;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate()>();

     label2:
        return;
    }

    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
    {
        android.support.v4.view.ViewPager $r0;
        android.support.v4.view.ViewPager$OnAdapterChangeListener $r1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.support.v4.view.ViewPager$OnAdapterChangeListener;

        $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener> = $r1;

        return;
    }

    public void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    {
        android.support.v4.view.ViewPager $r0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.support.v4.view.ViewPager$OnPageChangeListener;

        $r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener> = $r1;

        return;
    }

    public void setPageMargin(int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $i1 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $r0.<android.support.v4.view.ViewPager: int mPageMargin> = $i0;

        $i2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        specialinvoke $r0.<android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>($i2, $i2, $i0, $i1);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void requestLayout()>();

        return;
    }

    public void setPageMarginDrawable(int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<android.support.v4.view.ViewPager: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)>($r3);

        return;
    }

    public void setPageMarginDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v4.view.ViewPager $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable> = $r1;

        if $r1 == null goto label1;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void refreshDrawableState()>();

     label1:
        if $r1 != null goto label3;

        $z0 = 1;

     label2:
        virtualinvoke $r0.<android.support.v4.view.ViewPager: void setWillNotDraw(boolean)>($z0);

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void invalidate()>();

        return;

     label3:
        $z0 = 0;

        goto label2;
    }

    void smoothScrollTo(int, int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>($i0, $i1, 0);

        return;
    }

    void smoothScrollTo(int, int, int)
    {
        android.support.v4.view.ViewPager $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1, $f2;
        android.widget.Scroller $r1;
        android.support.v4.view.PagerAdapter $r2;

        $r0 := @this: android.support.v4.view.ViewPager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 := @parameter2: int;

        $i4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if $i4 != 0 goto label1;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label1:
        $i4 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $i5 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        $i0 = $i0 - $i4;

        $i1 = $i1 - $i5;

        if $i0 != 0 goto label2;

        if $i1 != 0 goto label2;

        specialinvoke $r0.<android.support.v4.view.ViewPager: void completeScroll()>();

        virtualinvoke $r0.<android.support.v4.view.ViewPager: void populate()>();

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(0);

        return;

     label2:
        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        specialinvoke $r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(2);

        $i6 = virtualinvoke $r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i2 = $i6 / 2;

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $f0 = (float) $i7;

        $f0 = 1.0F * $f0;

        $f1 = (float) $i6;

        $f0 = $f0 / $f1;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0);

        $f0 = (float) $i2;

        $f1 = (float) $i2;

        $f2 = virtualinvoke $r0.<android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>($f2);

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        if $i3 <= 0 goto label4;

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f0 = 1000.0F * $f0;

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i3 = $i3 * 4;

     label3:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 600);

        $r1 = $r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r1.<android.widget.Scroller: void startScroll(int,int,int,int,int)>($i4, $i5, $i0, $i1, $i3);

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

        return;

     label4:
        $f0 = (float) $i6;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i3 = $r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $f1 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i3);

        $f1 = $f0 * $f1;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $f0 = (float) $i3;

        $i3 = $r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f2 = (float) $i3;

        $f1 = $f2 + $f1;

        $f0 = $f0 / $f1;

        $f0 = 1.0F + $f0;

        $f0 = $f0 * 100.0F;

        $i3 = (int) $f0;

        goto label3;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v4.view.ViewPager $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewPager;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 != 0 goto label1;

        $r2 = $r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if $r1 != $r2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
